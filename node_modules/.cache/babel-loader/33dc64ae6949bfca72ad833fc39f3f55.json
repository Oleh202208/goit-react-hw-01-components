{"ast":null,"code":"var _jsxFileName = \"/Users/olehpolupan/Documents/GOIT/React/goit-react-hw-01-components/src/components/Friends/FriendListItem.js\";\nimport PropTypes from 'prop-types';\nimport { Friend, Status, Avatar, FriendName } from './FriendListItem.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FriendListItem = _ref => {\n  let {\n    friend: {\n      avatar,\n      name: username,\n      isOnline\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Friend, {\n    children: [/*#__PURE__*/_jsxDEV(Status, {\n      children: isOnline\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n      src: avatar,\n      alt: \"User avatar\",\n      width: \"48\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(FriendName, {\n      children: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = FriendListItem;\nFriendListItem.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired\n  })).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendListItem\");","map":{"version":3,"sources":["/Users/olehpolupan/Documents/GOIT/React/goit-react-hw-01-components/src/components/Friends/FriendListItem.js"],"names":["PropTypes","Friend","Status","Avatar","FriendName","FriendListItem","friend","avatar","name","username","isOnline","propTypes","friends","arrayOf","shape","id","number","isRequired"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,MAAzB,EAAiCC,UAAjC,QAAmD,yBAAnD;;AAEA,OAAO,MAAMC,cAAc,GAAG,QACzB;AAAA,MAD0B;AAACC,IAAAA,MAAM,EAAE;AAACC,MAAAA,MAAD;AAASC,MAAAA,IAAI,EAAEC,QAAf;AAAyBC,MAAAA;AAAzB;AAAT,GAC1B;AACH,sBACE,QAAC,MAAD;AAAA,4BACF,QAAC,MAAD;AAAA,gBAASA;AAAT;AAAA;AAAA;AAAA;AAAA,YADE,eAEF,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAEH,MAAb;AAAqB,MAAA,GAAG,EAAC,aAAzB;AAAuC,MAAA,KAAK,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,YAFE,eAGF,QAAC,UAAD;AAAA,gBAAaE;AAAb;AAAA;AAAA;AAAA;AAAA,YAHE;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CATM;KAAMJ,c;AAWbA,cAAc,CAACM,SAAf,GAA2B;AACzBC,EAAAA,OAAO,EAAEZ,SAAS,CAACa,OAAV,CACPb,SAAS,CAACc,KAAV,CAAgB;AAChBC,IAAAA,EAAE,EAACf,SAAS,CAACgB,MAAV,CAAiBC;AADJ,GAAhB,CADO,EAIPA;AALuB,CAA3B","sourcesContent":["import PropTypes from 'prop-types';\nimport { Friend, Status, Avatar, FriendName } from './FriendListItem.styled';\n\nexport const FriendListItem = ({friend: {avatar, name: username, isOnline},\n}) =>{\n  return (\n    <Friend>\n  <Status>{isOnline}</Status>\n  <Avatar src={avatar} alt=\"User avatar\" width=\"48\" />\n  <FriendName>{username}</FriendName>\n</Friend>\n  );\n};\n\nFriendListItem.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n    id:PropTypes.number.isRequired,\n  })\n  ).isRequired,\n};"]},"metadata":{},"sourceType":"module"}