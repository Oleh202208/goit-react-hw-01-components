{"ast":null,"code":"var _jsxFileName = \"/Users/olehpolupan/Documents/GOIT/React/goit-react-hw-01-components/src/components/Friends/FriendList.js\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FriendListItem = _ref => {\n  let {\n    friends: {\n      avatar,\n      name: username,\n      isOnline\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    class: \"item\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"status\",\n      children: isOnline\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      class: \"avatar\",\n      src: avatar,\n      alt: \"User avatar\",\n      width: \"48\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      class: \"name\",\n      children: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}; //   return (<ul>\n//     {items.map(item =>(\n//       <li key={item.id}>\n//         <Friend item={item}/>\n//       </li>\n//     ))}\n//   </ul>\n//   )\n// }\n\n_c = FriendListItem;\nFriendListItem.propTypes = {\n  friend: PropTypes.shape({\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired\n  })\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendListItem\");","map":{"version":3,"sources":["/Users/olehpolupan/Documents/GOIT/React/goit-react-hw-01-components/src/components/Friends/FriendList.js"],"names":["PropTypes","FriendListItem","friends","avatar","name","username","isOnline","propTypes","friend","shape","string","isRequired","bool"],"mappings":";AACA,OAAOA,SAAP,MAAsB,YAAtB;;AAEA,OAAO,MAAMC,cAAc,GAAG,QAAmD;AAAA,MAAlD;AAACC,IAAAA,OAAO,EAAE;AAACC,MAAAA,MAAD;AAASC,MAAAA,IAAI,EAACC,QAAd;AAAwBC,MAAAA;AAAxB;AAAV,GAAkD;AAC/E,sBAAO;AAAI,IAAA,KAAK,EAAC,MAAV;AAAA,4BACP;AAAM,MAAA,KAAK,EAAC,QAAZ;AAAA,gBAAsBA;AAAtB;AAAA;AAAA;AAAA;AAAA,YADO,eAEP;AAAK,MAAA,KAAK,EAAC,QAAX;AAAoB,MAAA,GAAG,EAAEH,MAAzB;AAAiC,MAAA,GAAG,EAAC,aAArC;AAAmD,MAAA,KAAK,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,YAFO,eAGP;AAAG,MAAA,KAAK,EAAC,MAAT;AAAA,gBAAiBE;AAAjB;AAAA;AAAA;AAAA;AAAA,YAHO;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKD,CANM,C,CAQP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KAhBaJ,c;AAkBbA,cAAc,CAACM,SAAf,GAA2B;AACzBC,EAAAA,MAAM,EAAER,SAAS,CAACS,KAAV,CAAgB;AACtBN,IAAAA,MAAM,EAAEH,SAAS,CAACU,MAAV,CAAiBC,UADH;AAEtBP,IAAAA,IAAI,EAAEJ,SAAS,CAACU,MAAV,CAAiBC,UAFD;AAGtBL,IAAAA,QAAQ,EAAEN,SAAS,CAACY,IAAV,CAAeD;AAHH,GAAhB;AADiB,CAA3B","sourcesContent":["\nimport PropTypes from 'prop-types';\n\nexport const FriendListItem = ({friends: {avatar, name:username, isOnline},}) => {\n  return(<li class=\"item\">\n  <span class=\"status\">{isOnline}</span>\n  <img class=\"avatar\" src={avatar} alt=\"User avatar\" width=\"48\" />\n  <p class=\"name\">{username}</p>\n</li>)\n}\n\n//   return (<ul>\n//     {items.map(item =>(\n//       <li key={item.id}>\n//         <Friend item={item}/>\n//       </li>\n//     ))}\n//   </ul>\n//   )\n// }\n\nFriendListItem.propTypes = {\n  friend: PropTypes.shape({\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n  }),\n};"]},"metadata":{},"sourceType":"module"}