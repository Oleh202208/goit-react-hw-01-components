{"ast":null,"code":"var _jsxFileName = \"/Users/olehpolupan/Documents/GOIT/React/goit-react-hw-01-components/src/components/Friends/FriendListItem.js\";\nimport PropTypes from 'prop-types';\nimport FriendListItem from '../FriendListItem/FriendListItem';\nimport { List } from './FriendsList.styled.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FriendList(_ref) {\n  let {\n    friends\n  } = _ref;\n  const listItem = friends.map(_ref2 => {\n    let {\n      id,\n      avatar,\n      name,\n      isOnline\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(FriendListItem, {\n      avatar: avatar,\n      name: name,\n      isOnline: isOnline\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: listItem\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n}\n\n_c = FriendList;\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired\n  }))\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendList\");","map":{"version":3,"sources":["/Users/olehpolupan/Documents/GOIT/React/goit-react-hw-01-components/src/components/Friends/FriendListItem.js"],"names":["PropTypes","FriendListItem","List","FriendList","friends","listItem","map","id","avatar","name","isOnline","propTypes","arrayOf","shape","number","isRequired","string","bool"],"mappings":";AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SAASC,IAAT,QAAqB,0BAArB;;;AAEA,SAASC,UAAT,OAAiC;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAC/B,QAAMC,QAAQ,GAAGD,OAAO,CAACE,GAAR,CAAY;AAAA,QAAC;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,MAAN;AAAcC,MAAAA,IAAd;AAAoBC,MAAAA;AAApB,KAAD;AAAA,wBAC3B,QAAC,cAAD;AAAyB,MAAA,MAAM,EAAEF,MAAjC;AAAyC,MAAA,IAAI,EAAEC,IAA/C;AAAqD,MAAA,QAAQ,EAAEC;AAA/D,OAAqBH,EAArB;AAAA;AAAA;AAAA;AAAA,YAD2B;AAAA,GAAZ,CAAjB;AAIA,sBAAO,QAAC,IAAD;AAAA,cAAOF;AAAP;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KANQF,U;AAQTA,UAAU,CAACQ,SAAX,GAAuB;AACrBP,EAAAA,OAAO,EAAEJ,SAAS,CAACY,OAAV,CACPZ,SAAS,CAACa,KAAV,CAAgB;AACdN,IAAAA,EAAE,EAAEP,SAAS,CAACc,MAAV,CAAiBC,UADP;AAEdP,IAAAA,MAAM,EAAER,SAAS,CAACgB,MAAV,CAAiBD,UAFX;AAGdN,IAAAA,IAAI,EAAET,SAAS,CAACgB,MAAV,CAAiBD,UAHT;AAIdL,IAAAA,QAAQ,EAAEV,SAAS,CAACiB,IAAV,CAAeF;AAJX,GAAhB,CADO;AADY,CAAvB","sourcesContent":["\n\nimport PropTypes from 'prop-types';\nimport FriendListItem from '../FriendListItem/FriendListItem';\nimport { List } from './FriendsList.styled.jsx';\n\nfunction FriendList({ friends }) {\n  const listItem = friends.map(({ id, avatar, name, isOnline }) => (\n    <FriendListItem key={id} avatar={avatar} name={name} isOnline={isOnline} />\n  ));\n\n  return <List>{listItem}</List>;\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n    })\n  ),\n};"]},"metadata":{},"sourceType":"module"}